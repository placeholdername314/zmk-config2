/*.
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define SYM 1
#define FUNC 2
#define RST 3
#define QWE 4
#define GAM 5
&mt {
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_btld {
            timeout-ms = <50>;
            layers = <3>;
            key-positions = <0 1 2 3 4>;
            bindings = <&bootloader>; 
        

        };
    };
};

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {

                        bindings = <
   &mt ESC SEMI &kp L &kp C &kp M &kp K   &kp J &kp F  &kp U     &kp Y   &mt LA(TAB) Q
   &kp A &kp R &kp S &kp T &kp G        &kp P &kp N  &kp E     &kp I   &kp O
   &mt END Z &kp X &kp W &kp D &kp V        &kp B &kp H  &kp COMMA &mt FSLH DOT &mt LSHFT LG(LS(S))
         &to 1  &kp BSPC &kp LCTRL      &kp ENTER &kp SPACE &to 2
                        >;
                };
                SYM_layer {

                        bindings = <
   &kp N1   &kp N2      &kp N3  &kp N4 &kp N5     &kp N6  &kp N7 &kp N8   &kp N9   &kp N0
   &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT      &kp CARET &kp AMPS &kp ASTRK &kp LPAR &kp RPAR
   &kp EQUAL &kp MINUS &kp FSLH &kp BSLH &kp SEMI     &kp APOS &kp LBKT  &kp RBKT   &kp GRAVE    &kp QMARK
                     &kp LSHFT &kp BSPC  &to 0          &kp ENTER  &kp SPACE &to 2  
                        >;
                };

                FUNC_layer {

                        bindings = <
   &kp F1  &kp F2    &kp F3  &kp F4  &kp F5                                         &kp F6 &kp F7  &kp F8 &kp F9 &kp F10
   &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &bt BT_SEL 5     &trans &trans &trans   &kp F11 &kp F12
   &bt BT_CLR    &none    &none    &none    &to 3                              &to 3   &kp LEFT  &kp DOWN   &kp UP    &kp RIGHT
                        &to 1  &kp BSPC &to 0                                       &to 0   &kp SPACE &none  
                        >;
                };


                RST_layer {

                        bindings = <
   &none &none &none &none &none  &kp RA(RC(N1)) &kp RA(RC(N2)) &kp RA(RC(N3)) &kp RA(RC(N4)) &kp RA(RC(N5)) 
   &to 5 &none &none &none &none  &kp RA(RC(N6)) &kp RA(RC(N7)) &kp RA(RC(N8)) &kp RA(RC(N9)) &trans 
  &to 4 &none &none &none &trans  &trans &trans &trans &trans &trans   
                 &to 1 &trans &to 0        &to 0 &trans &to 2 
                        >;
               };       
                        
                QWE_layer {

                        bindings = <
  &kp ESC  &kp Q &kp W &kp E &kp R   &kp Y &kp U  &kp I     &kp O   &kp BSPC
  &kp LCTRL &kp A &kp S &kp D &kp F        &kp H &kp J  &kp K     &kp L   &kp SEMI
  &kp LSHFT  &kp Z &kp X &kp C &kp V      &kp N &kp M  &kp COMMA &mt FSLH DOT &kp LSHFT
         &kp LSHFT  &kp SPACE &kp LCTRL      &kp ENTER &kp SPACE &to 0
                        >;
           };

                GAM_layer {

                        bindings = <
  &kp ESC  &kp Q &kp W &kp E &kp R   &kp Y &kp U  &kp W     &kp O   &kp BSPC
  &kp LCTRL &kp K &kp J &kp SPACE &kp F        &kp H &kp A  &kp S     &kp D   &kp SEMI
  &kp LSHFT  &kp Z &kp X &kp C &kp V      &kp N &kp M  &kp COMMA &mt FSLH DOT &kp LSHFT
         &kp LSHFT  &kp SPACE &kp L      &kp ENTER &kp SPACE &to 0
                        >;

                  };
               };

};
